---
name: validate-kubernetes-env-configured
description: |
  This helper is designed to validate the necessary Kubernetes configuration for TTPForge.
  It checks for the presence of the kubectl command and the current kubeconfig context.
  It also allows the user to specify the Kubernetes context to be used with TTPForge.
args:
  - name: context
    description: Name of the Kubernetes context to use with TTPForge
    default: ""

steps:
  - name: ensure-kubectl-present
    description: "Ensure kubectl is installed."
    inline: |
      if ! [ -x "$(command -v kubectl)" ]; then
        echo 'Error: kubectl is not installed.' >&2
        exit 1
      else
        echo -e "kubectl is installed: $(kubectl version --client --short)"
      fi

  - name: ensure-kubeconfig-context
    description: "Ensure a valid kubeconfig context is set."
    inline: |
      if [[ -z "${KUBECONFIG}" && -z "${HOME}/.kube/config" ]]; then
        echo 'Error: KUBECONFIG environment variable is not set and default kubeconfig is not present.' >&2
        exit 1
      fi

      if [[ -n "{{ .Args.context }}" ]]; then
        echo "Setting Kubernetes context to {{ .Args.context }}."
        kubectl config use-context "{{ .Args.context }}"
      fi

      CURRENT_CONTEXT=$(kubectl config current-context)
      if [[ -z "${CURRENT_CONTEXT}" ]]; then
        echo 'Error: No current Kubernetes context is set.' >&2
        exit 1
      else
        echo -e "Current Kubernetes context is set to: ${CURRENT_CONTEXT}"
      fi

  - name: ensure-kubernetes-cluster-access
    description: "Ensure access to the Kubernetes cluster."
    inline: |
      if ! kubectl get nodes &> /dev/null; then
        echo 'Error: Cannot access the Kubernetes cluster with the current context.' >&2
        exit 1
      else
        echo 'Successfully accessed the Kubernetes cluster.'
      fi
