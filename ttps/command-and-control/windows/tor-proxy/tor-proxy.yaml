---
api_version: 2.0
uuid: dfdada2c-f1f9-4f2a-9a02-241fc1e7393b
name: Tor Proxy Usage - Windows
description: |
  This test is designed to launch the tor proxy service, which is what is utilized in the background by the Tor Browser and other applications with add-ons in order to provide onion routing functionality.
  Upon successful execution, the tor proxy will be launched, run for 60 seconds, and then exit.
  Derived from https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1090.003/T1090.003.md#atomic-test-2---tor-proxy-usage---windows
requirements:
  platforms:
    - os: windows
mitre:
  tactics:
    - TA0011 Command and Control
  techniques:
    - T1090 Proxy
  subtechniques:
    - T1090.003 Multi-hop Proxy

args:
  - name: torExe
    description: Location of tor.exe file
    type: string
    default: $PWD\bin\Tor\tor.exe
  - name: sleepTime
    description: Amount in seconds to pause after starting tor
    type: int
    default: 60

steps:
  - name: tor_execute
    executor: powershell
    inline: |
      Write-Host "tor.exe must be installed on the machine, checking if tor.exe exists at {{.Args.torExe}}"

      if (-Not (Test-Path "{{.Args.torExe}}")) {
        Write-Host "Downloading tor..."
        $torZip = New-TemporaryFile
        $extractPath = Split-Path (Split-Path "{{.Args.torExe}}" -Parent) -Parent
        Invoke-WebRequest "https://archive.torproject.org/tor-package-archive/torbrowser/11.0.6/tor-win32-0.4.6.9.zip" -OutFile "${torZip}.zip"
        New-Item -ItemType Directory -Path $extractPath -ErrorAction ignore | Out-Null
        expand-archive -LiteralPath "${torZip}.zip" -DestinationPath $extractPath
        remove-item "${torZip}.zip"
      }

      if (-Not (Test-Path "{{.Args.torExe}}")){
        Write-Error "Tor was not downloaded or does not exist at {{.Args.torExe}}"
        exit 1
      } else {
        Write-Host "Starting tor.exe..."
        start powershell { &"{{.Args.torExe}}" }
        start-sleep -Seconds {{.Args.sleepTime}}
      }

    cleanup:
      executor: powershell
      inline: |
        try {
          Write-Host "Attempting to stop tor process..."
          Stop-Process -Name "tor" -ErrorAction Stop
          Write-Host "Successfully stopped tor process."
        } catch {
          Write-Host "Failed to stop tor process: $_"
        }

        $parentDir = Split-Path (Split-Path "{{.Args.torExe}}" -Parent) -Parent
        if (Test-Path "${parentDir}"){
          remove-item -r $parentDir
        }
        else{
          Write-Host "Failed to remove ${parentDir} "
        }
